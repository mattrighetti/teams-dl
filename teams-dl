#!/bin/bash

source scriptUtils.sh

function __check_output() {
    if [[ $? -ne 0 ]]; then
        echo "Error getting JSON"
        exit 1
    fi
}

function getMainJSON() {
    VIDEO_ID=$1

    curl -s "https://euwe-1.api.microsoftstream.com/api/videos/${VIDEO_ID}?\$expand=creator&api-version=1.0-private" \
         -H "Authorization: Bearer ${TOKEN}"
}

function videolink_query() {
    LINK=$1

    curl -s $LINK \
        -H "Authorization: Bearer ${TOKEN}" | \
        grep -o -E 'URI=".*"' | \
        tail -1 | \
        grep -o -E '".*"' | \
        tr -d '"'
}

function audiolink_query() {
    LINK=$1

    curl -s $LINK \
        -H "Authorization: Bearer ${TOKEN}" | \
        tail -n 1
}

function protectionKeyUri_query() {
    LINK=$1

    curl -s $LINK \
        -H "Authorization: Bearer ${TOKEN}" | \
        grep -o -E 'URI=".*"' | \
        grep -o -E '".*"' | \
        tr -d '"'
    
    cat keyUri.txt 
}

function video_data_full() {
    LINK=$1

    curl -s $LINK \
        -H "Authorization: Bearer ${TOKEN}" > video_full.m3u8
}

function audio_data_full() {
    LINK=$1
    BASE=$2

    curl -s $LINK \
        -H "Authorization: Bearer ${TOKEN}" | \
        sed -E "s#Fragments#${BASE}/Fragments#" > audio_full.m3u8
}

function audio_data_tmp() {
    TMP_KEY="file://$(pwd)/videos"
    KEY_FILE="my.key"
    ID=$( cat audio_full.m3u8 | grep -o -E '".*"' | sed -E "s/.*api\/videos\/([A-Za-z0-9-]+)\/.*/\1/" )

    NEW_URI="${TMP_KEY}/${ID}/${KEY_FILE}"

    cat audio_full.m3u8 | \
        sed -e "s#\".*\"#\"${NEW_URI}\"#" | \
        sed -E "s/.*(audio_segments\/Fragments.*)/\1/" > audio_tmp.m3u8
}

function protectionKey_query() {
    LINK=$1

    curl -s $LINK \
        -H "Authorization: Bearer ${TOKEN}" \
        -H "encoding: null" > key.txt

    cat key.txt
}

function video_data_tmp() {
    TMP_KEY="file://$(pwd)/videos"
    KEY_FILE="my.key"
    ID=$( cat video_full.m3u8 | grep -o -E '".*"' | sed -E "s/.*api\/videos\/([A-Za-z0-9-]+)\/.*/\1/" )

    NEW_URI="${TMP_KEY}/${ID}/${KEY_FILE}"

    cat video_full.m3u8 | \
        sed -e "s#\".*\"#\"${NEW_URI}\"#" | \
        sed -E "s/.*(Fragments.*)/\1/" > video_tmp.m3u8
}

function aria2video_download() {
    VIDEO_FULL=$1
    n=$2

    aria2c -i "${VIDEO_FULL}" \
        -j $n \
        -x $n \
        -d "./videos/video_segments" \
        --header="Authorization: Bearer ${TOKEN}"
}

function aria2audio_download() {
    AUDIO_FULL=$1
    n=$2

    aria2c -i "${AUDIO_FULL}" \
        -j $n \
        -x $n \
        -d "./videos/audio_segments" \
        --header="Authorization: Bearer ${TOKEN}"
}

function getJSONdata() {
    JSON=$1
    FIELD=$2
    
    echo $JSON | \
    jq -r ".${FIELD}" 2>/dev/null
}

export TOKEN=$(cat token)

LINK=$( cat links.txt )
guid=${LINK##*/}
JSON=$( getMainJSON ${guid} )

HLS_URL=$(getJSONdata "${JSON}" "playbackUrls[2].playbackUrl")
BASE_URL=${HLS_URL%%*/}
PLAYLIST_URI=$( videolink_query $HLS_URL | sed -E 's/,type=keyframes//' )
PKEY_URL="$( protectionKeyUri_query "${PLAYLIST_URI}" )"
KEY_PROT="$( protectionKey_query $PKEY_URL )"
BASE_URI=${PLAYLIST_URI%\/*}
BASE_URI=${BASE_URI##*=}
FULL_V=$( video_data_full $PLAYLIST_URI )
video_data_tmp
# aria2video_download "video_full.m3u8" 10

AUDIO_URI=$( audiolink_query $HLS_URL | sed -E 's/.*\/(QualityLevels[A-Za-z,=-]*)/\1/' )
AUDIO_URI=${AUDIO_URI//[$'\t\r\n']}
AUDIO_LINK="${BASE_URI%/*}/${AUDIO_URI}"
audio_data_full $AUDIO_LINK "${BASE_URI%/*}/${AUDIO_URI%/*}"
audio_data_tmp
aria2audio_download "audio_full.m3u8" 5

exit 0